buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}
apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile fileTree(include: '*/so', dir: 'libs')
    compile files('libs/libksystat.jar')
    compile 'com.android.support:support-v4:24.0.0'
}

android {
    signingConfigs {
        config {
            keyAlias 'ksystreamer'
            keyPassword 'kscloud'
            storeFile file('ksystreamer.jks')
            storePassword 'kscloud'
        }
    }
    compileSdkVersion 23
    buildToolsVersion "21.1.2"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDir './libs/'
            jni.srcDirs = []
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
            jniDebuggable true
        }
        release {
            signingConfig signingConfigs.config
        }
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/ksylive1.0.jar'
}

task makeJar(type: Jar) {
    //指定生成的jar名
    baseName 'ksylive1.0'
    //从哪里打包class文件
    from('build/intermediates/classes/debug/com/ksy/recordlib/service/')
    //打包到jar后的目录结构
    into('com/ksy/recordlib/service')
}

makeJar.dependsOn(clearJar, build)